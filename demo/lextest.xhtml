<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script type="text/javascript" src="jquery.min.js" />

<script type="text/javascript" src="../build/jsg.js" />
<script type="text/javascript">
<![CDATA[

function getInputDescOfRange(expr, range) {
    if(range.start === undefined)
        return '<at end of input>';
    
    var start = range.start, end = range.end;
    if(end === undefined)
        end = expr.length;
    
    if(start == end)
        return '<implicit token before index ' + start + '>';
    
    return start + ' -> ' + end + ': "' + expr.substring(start, end) + '"';
}

function nSpaces(n) {
    var s = '';
    for(var i = 0; i < n; i++)
        s += ' ';
    
    return s;
}

function clearResults() {
    $('#tres').text('');
    $('#pres').text('');
    $('#cres').text('');
    $('#eres').text('');
}

function init() {
	$('#frm').submit(function(e) {
		e.preventDefault();
		
		clearResults();
	
		var vars = $('#vars').val().split(','),
			vals = $('#vals').val().split(','),
			env = JSG.Expr.Environment(vars,
			        !$('#autoParens').prop('checked'),
			        !$('#implicitMul').prop('checked'),
					!$('#powOp').prop('checked')),
			skipOptimizations = !$('#optimize').prop('checked');
		
		for(var i = 0; i < vals.length; i++)
		    vals[i] = parseFloat(vals[i]);
		
		// Add a sample n-arity function for kicks
		var sumFn = function(a, b) {
			var sum = a + b;
			for(var i = 2; i < arguments.length; i++)
				sum += arguments[i];
			
			return sum;
		};
		sumFn.lengthIsMinimum = true;
		env.addFn('sum', sumFn);
		
		var tokens, pt, fn;
		
		try {
			var expr = $('#expr').val(),
			    s = '',
			    inputDescColumn = 30;
			
			tokens = JSG.Expr.Core.lex(env, expr);
			
			for(var i = 0; i < tokens.length; i++) {
			    var t = tokens[i],
			        tokenStr = t.toString();
			    
			    s += tokenStr + nSpaces(inputDescColumn - tokenStr.length);
			    s += getInputDescOfRange(expr, t.rangeInInput) + '\n';
			}
			
			$('#tres').text(s);
		}
		catch(exc) {
		    var s = 'Error: ' + exc.message;
		    if('range' in exc)
		        s += '\n' + getInputDescOfRange(expr, exc.range);
		    
			$('#tres').text(s);
		}
		
		if(tokens) {
		    try {
		        pt = JSG.Expr.Core.parse(env, tokens);
		        $('#pres').text(pt.toString());
		    }
		    catch(exc) {
		        var s = 'Error: ' + exc.message;
                if('range' in exc)
                    s += '\n' + getInputDescOfRange(expr, exc.range);
                
                $('#pres').text(s);
		    }
		}
		
		if(pt) {
		    try {
                fn = JSG.Expr.Core.compile(env, pt, skipOptimizations);
                $('#cres').text(fn.toString());
            }
            catch(exc) {
                var s = 'Error: ' + exc.message;
                if('range' in exc)
                    s += '\n' + getInputDescOfRange(expr, exc.range);
                
                $('#cres').text(s);
            }
		}
		
		if(fn) {
		    try {
		        $('#eres').text(fn.apply(null, vals));
		    }
		    catch(exc) {
                var s = 'Error: ' + exc.message;
                if('range' in exc)
                    s += '\n' + getInputDescOfRange(expr, exc.range);
                
                $('#eres').text(s);
		    }
		}
	});
}

$(init);

]]>
</script>
</head>
<body>
<form id='frm'>

<div style="float: left">
    <label for="vars">Variables </label><input id="vars" value="x,y" style="font-family: monospace"/><br /><br />
    <label for="expr">Expression </label><input id="expr" value="2xy" style="font-family: monospace"/><br /><br />
    <label for="vals">Values </label><input id="vals" value="2, 4" style="font-family: monospace"/><br /><br />
</div>

<fieldset style="float: left; margin-left: 50px">
	<legend>Options</legend>
	<input type="checkbox" id="autoParens" checked="checked" />
	<label for="autoParens">Automatic parenthesis closure</label><br />
	<input type="checkbox" id="implicitMul" checked="checked" />
	<label for="implicitMul">Implicit multiplication</label><br/>
	<input type="checkbox" id="powOp" checked="checked" />
	<label for="powOp">Exponentiation operator (^)</label><br/>
	<input type="checkbox" id="optimize" checked="checked" />
	<label for="optimize">Optimize compilation</label><br/>
</fieldset>

<div style="clear: both" />

<input type="submit" value="Evaluate" id="go" /><br />
</form>
<br />
<b>Lex</b>
<pre id="tres" /><br />

<b>Parse</b>
<pre id="pres" /><br />

<b>Compile</b>
<pre id="cres" /><br />

<b>Evaluate</b>
<pre id="eres" /><br />
</body>
</html>